ggplot(df_metrics_michael, aes(x=metrics, y=values, color=metrics)) +
geom_boxplot() +scale_color_brewer(palette="Dark2")
ggplot(df_metrics_michael, aes(x=metrics, y=values, color=metrics)) +
geom_boxplot()# +scale_color_brewer(palette="Dark2")
ggplot(df_metrics_michael, aes(x=metrics, y=values, color=metrics)) +
geom_boxplot() +scale_color_brewer(palette="Dark2")
ggplot(df_metrics_michael, aes(x=metrics, y=values, fill=metrics)) +
geom_boxplot() +scale_color_brewer(palette="Dark2")
ggplot(df_metrics_michael, aes(x=metrics, y=values, fill=metrics)) +
geom_boxplot() +scale_color_brewer(palette="Dark2") + labs( x="", y="Values", title="Michael Jackson Music Metrics")
ggplot(df_metrics_prince, aes(x=metrics, y=values, fill=metrics)) +
geom_boxplot() +scale_color_brewer(palette="Dark2") + labs( x="", y="Values", title="Prince Music Metrics")
ggplot(df_metrics_michael, aes(x=metrics, y=values, fill=metrics)) +
geom_boxplot() +scale_color_brewer(palette="Dark2") + labs( x="", y="Values", title="Michael Jackson Music Metrics")
ggplot(df_metrics_prince, aes(x=metrics, y=values, fill=metrics)) +
geom_boxplot() +scale_color_brewer(palette="Dark2") + labs( x="", y="Values", title="Prince Music Metrics")
df_metrics_prince = select(prince_df, danceability, acousticness, loudness, valence, energy, liveness)
df_metrics_michael = select(michael_df, danceability, acousticness, loudness, valence, energy, liveness)
df_metrics_michael = mutate(df_metrics_michael,loudness= (loudness+60)/60)
df_metrics_prince = mutate(df_metrics_prince,loudness= (loudness+60)/60)
df_metrics_michael= pivot_longer(df_metrics_michael, c(danceability, acousticness, loudness, valence), names_to="metrics",values_to = "values")
df_metrics_prince= pivot_longer(df_metrics_prince, c(danceability, acousticness, loudness, valence), names_to="metrics",values_to = "values")
df_metrics_michael$metrics <- as.factor(df_metrics_michael$metrics)
df_metrics_prince$metrics <- as.factor(df_metrics_prince$metrics)
ggplot(df_metrics_michael, aes(x=metrics, y=values, fill=metrics)) +
geom_boxplot() +scale_color_brewer(palette="Dark2") + labs( x="", y="Values", title="Michael Jackson Music Metrics")
ggplot(df_metrics_prince, aes(x=metrics, y=values, fill=metrics)) +
geom_boxplot() +scale_color_brewer(palette="Dark2") + labs( x="", y="Values", title="Prince Music Metrics")
df_metrics_prince = select(prince_df, danceability, acousticness, loudness, valence, energy, liveness)
df_metrics_michael = select(michael_df, danceability, acousticness, loudness, valence, energy, liveness)
df_metrics_michael = mutate(df_metrics_michael,loudness= (loudness+60)/60)
df_metrics_prince = mutate(df_metrics_prince,loudness= (loudness+60)/60)
df_metrics_michael= pivot_longer(df_metrics_michael, c(danceability, acousticness, loudness, valence, liveness, energy), names_to="metrics",values_to = "values")
df_metrics_prince= pivot_longer(df_metrics_prince, c(danceability, acousticness, loudness, valence, liveness, energy), names_to="metrics",values_to = "values")
df_metrics_michael$metrics <- as.factor(df_metrics_michael$metrics)
df_metrics_prince$metrics <- as.factor(df_metrics_prince$metrics)
ggplot(df_metrics_michael, aes(x=metrics, y=values, fill=metrics)) +
geom_boxplot() +scale_color_brewer(palette="Dark2") + labs( x="", y="Values", title="Michael Jackson Music Metrics")
ggplot(df_metrics_prince, aes(x=metrics, y=values, fill=metrics)) +
geom_boxplot() +scale_color_brewer(palette="Dark2") + labs( x="", y="Values", title="Prince Music Metrics")
ggplot( michael_df, aes(x=year, y=popularity))  +geom_line(stat = "summary")
ggplot( prince_df, aes(x=year, y=popularity))  +geom_line(stat = "summary")
df=mutate(df,explicit=case_when(explicit == "0" ~ "Non-Explicit", explicit == "1" ~ "Explicit"))
ggplot( df, aes(x=year, y=valence))  +geom_line(stat = "summary",color='dark red') + facet_grid(rows =vars(explicit)) +
labs(
x="Year",
y ="Valence",
title="Valence Over the Years by Explicity")
'```
```{r}
ggplot( df, aes(x=year, y=popularity)) +geom_line(color="blue", stat = "summary") +stat_smooth(span=0.1, color="red")
knitr::opts_chunk$set(echo = TRUE)
knitr::opts_chunk$set(echo = TRUE, warning=FALSE)
# loading libraries
install.packages("fmsb")
library(ggplot2)
library(dplyr)
library(corrplot)
library(tidyr)
library(ggthemes)
library(fmsb)
install.packages("fmsb")
# loading libraries
library(ggplot2)
library(dplyr)
library(corrplot)
library(tidyr)
library(ggthemes)
df = read.csv("spotify.csv")
glimpse(df)
df %>% group_by(year) %>% summarise(n=n()) %>%
#<<<<<<< HEAD
ggplot( aes(x=year, y=n )) +geom_line(color="darkgreen") +
labs( title="Number of songs per Year", y ="Number of songs" ) + geom_point() +
theme_solarized()
#=======
# df %>% group_by(year) %>% summarise(n=n()) %>%
# ggplot(aes(x=year, y=n )) +geom_line(color="black") +
#   labs( title="Number of songs per year", y ="Number of songs" ) +
#   theme_solarized()
#
df %>% group_by(year) %>% summarise(n=n()) %>%
ggplot( aes(x=year, y=n )) +geom_line(color="darkgreen") +
labs( title="Number of songs per Year", y ="Number of songs" ) + geom_point() +
theme_solarized()
c=df%>%
select(popularity, acousticness,speechiness, danceability, duration_ms, instrumentalness , liveness, loudness, speechiness, tempo, valence ) %>%
cor
cars_corr<-c
corrplot(cars_corr, method="color", title = "\n\nFeature Correlation Matrix")
#corrplot(abs(c), method="color")
c=df%>%
select(popularity, acousticness,speechiness, danceability, duration_ms, instrumentalness , liveness, loudness, speechiness, tempo, valence ) %>%
cor
cars_corr<-c
corrplot(cars_corr, method="color", title = "\n\nFeature Correlation Matrix")
ggplot ( df, aes(x=valence, fill= I("lightgreen"), color=I("black"))) +
geom_histogram() +
labs( x="Valence",
y="Number of Songs",
title = "The Distribution of Songs based on their Valence")
ggplot ( df, aes(x=valence, fill= I("lightgreen"), color=I("black"))) +
geom_histogram() +
labs( x="Valence",
y="Number of Songs",
title = "The Distribution of Songs based on their Valence")
ggplot( df, aes(x=danceability, fill=I("lightgreen"), color=I("black"))) +
geom_histogram( ) +
labs( x="Danceability",
y="Number of Songs",
title="The Distribtuion of The Songs Based on Danceablity")
ggplot( df, aes(x=loudness)) +geom_density( fill="pink" ) +
labs( x="Loudness",
y="Density",
title="The Density Curve of The Songs Based on Loundness")
ggplot(df, aes(x=acousticness)) +geom_density(fill="lightblue") +
labs( x="Acousticness",
y="Density",
title="The Density Curve of The Songs Based on Acousticness")
df %>%
mutate(bin= cut(loudness, breaks= c(seq(-60, 3, by=6)) )) %>%drop_na() %>%
ggplot(aes(x=bin, y=danceability, color=I("black"),  fill=I("lightgreen"))) +geom_bar(stat = "summary") +
labs( x="Loudness",
y="Averge Danceability",
title="Correlating Danceability VS Loudness"
)
df %>%
mutate(bin= cut(valence, breaks= c(seq(0, 1, by=0.05)) )) %>% drop_na() %>%
ggplot(aes(x=bin, y=danceability, color=I("black"), fill=I("lightgreen"))) +geom_bar(stat = "summary") +
labs( x="Valence", y="Avg. Danceablity",
title="Correlating The Danceablity VS Valence") +
theme(axis.text.x = element_text(angle = 90))
df %>%
mutate(bin= cut(loudness, breaks= c(seq(-60, 3, by=6)) )) %>%drop_na() %>%
ggplot(aes(x=bin, y=acousticness, color=I("black"),  fill=I("lightblue"))) +geom_bar(stat = "summary") +
labs( x="Loudness",
y="Averge acousticness",
title="Correlating acousticness VS Loudness"
)
#since most songs have loudness of more than -15, we'll start from this point. all songs less than -15 loudness are outliers
df %>% mutate(loud_range=cut(loudness, breaks=seq(-15,0, by=3))) %>% drop_na() %>%
ggplot(aes(x=loud_range, y=popularity, fill=I("pink"), color=I("black")))+geom_bar(stat = "summary") +
labs(
x="Popularity",
y ="Loudness level",
title="Popularity by Loudness"
)
# positivity doesn't necessate popularity
df %>% mutate(pop_range=cut(popularity, breaks=seq(-1,100, by=11))) %>% drop_na() %>%
ggplot(aes(x=pop_range, y=valence, fill=I("lightyellow"), color=I("black")))+geom_bar(stat = "summary") +
labs(
x="Popularity",
y ="Valence level",
title="Popularity by Valence"
)
# seems that danceable music is popular ( small positive correlation)
df %>% mutate(pop_range=cut(popularity, breaks=seq(-1,100, by=11))) %>% drop_na() %>%
ggplot(aes(x=pop_range, y=danceability, fill=I("lightgreen"), color=I("black")))+geom_bar(stat = "summary") +
labs(
x="Popularity",
y ="Danceability level",
title="Popularity by Danceability"
)
# music fans like low acoustic music ( small negative correlation)
df %>% mutate(pop_range=cut(popularity, breaks=seq(-1,100, by=11))) %>% drop_na() %>%
ggplot(aes(x=pop_range, y=acousticness, fill=I("lightblue"), color=I("black")))+geom_bar(stat = "summary") +
labs(
x="Popularity",
y ="Acousticness level",
title="Popularity by Acousticness"
)
#
# ggplot( df, aes(x=year, y=acousticness))  +geom_line(stat = "summary") +facet_grid(rows =vars(explicit)) +
#     labs(
#     x="Year",
#     y ="Acousticness",
#     title="")
ggplot( df, aes(x=year, y=valence))  +geom_line(stat = "summary",color='dark red') + facet_grid(rows =vars(explicit)) +
labs(
x="Year",
y ="Valence",
title="Valence Over the Years by Explicity")
#
df=mutate(df,explicit=case_when(explicit == "0" ~ "Non-Explicit", explicit == "1" ~ "Explicit"))
ggplot( df, aes(x=year, y=valence))  +geom_line(stat = "summary",color='dark red') + facet_grid(rows =vars(explicit)) +
labs(
x="Year",
y ="Valence",
title="Valence Over the Years by Explicity")
df_metrics = select(df, year, danceability, acousticness, loudness, valence)
df_metrics = mutate(df_metrics,loudness= (loudness+60)/60)
df_metrics= pivot_longer(df_metrics, c(danceability, acousticness, loudness, valence), names_to="metrics",values_to = "values")
ggplot( df_metrics, aes(x=year, y=values))  + geom_line(aes(color=metrics, line_type=metrics), stat = "summary") +
labs(x="year",
y= "Value",
color="Legend",
title= "Metrics Comparison Over the Years")
ggplot(df, aes(x=loudness, y=as.factor(explicit), fill=as.factor(explicit))) + geom_violin(trim = FALSE) +
labs(x="loudness",
y= "",
title= "Loudness by Explicity",
fill = "Explicity")
# The louder the music, the more exlicit it is
df %>%
mutate(bin= cut(loudness, breaks= c(seq(-15, 0, by=3)) )) %>%drop_na() %>%
ggplot(aes(x=bin, y=danceability, fill=as.factor(explicit))) +geom_bar(position = "fill", stat = "identity") +
labs( x="Loudness", y="Averge Danceability", fill = "Explicity", title="Danceability vs Loudness in Terms of Explicity")
prince_df= filter(df, grepl("Prince", artists, fixed=TRUE))
# selecting 2 singers of the same era
df$artists <- lapply(df$artists, "as.character")
michael_df= filter(df, grepl("Michael Jackson", artists, fixed=TRUE))
prince_df= filter(df, grepl("Prince", artists, fixed=TRUE))
prince_df
df_metrics_prince = select(prince_df, danceability, acousticness, loudness, valence, energy, liveness)
df_metrics_michael = select(michael_df, danceability, acousticness, loudness, valence, energy, liveness)
df_metrics_michael = mutate(df_metrics_michael,loudness= (loudness+60)/60)
df_metrics_prince = mutate(df_metrics_prince,loudness= (loudness+60)/60)
df_metrics_michael= pivot_longer(df_metrics_michael, c(danceability, acousticness, loudness, valence, liveness, energy), names_to="metrics",values_to = "values")
df_metrics_prince= pivot_longer(df_metrics_prince, c(danceability, acousticness, loudness, valence, liveness, energy), names_to="metrics",values_to = "values")
df_metrics_michael$metrics <- as.factor(df_metrics_michael$metrics)
df_metrics_prince$metrics <- as.factor(df_metrics_prince$metrics)
ggplot(df_metrics_michael, aes(x=metrics, y=values, fill=metrics)) +
geom_boxplot() +scale_color_brewer(palette="Dark2") + labs( x="", y="Values", title="Michael Jackson Music Metrics")
ggplot(df_metrics_prince, aes(x=metrics, y=values, fill=metrics)) +
geom_boxplot() +scale_color_brewer(palette="Dark2") + labs( x="", y="Values", title="Prince Music Metrics")
ggplot(df_metrics_prince, aes(x=metrics, y=values, fill=metrics)) +
geom_boxplot() +scale_color_brewer(palette="Dark2") + labs( x="", y="Values", title="Prince Music Metrics")
df_metrics_prince = select(prince_df, danceability, acousticness, loudness, valence, energy, liveness)
df_metrics_michael = select(michael_df, danceability, acousticness, loudness, valence, energy, liveness)
df_metrics_michael = mutate(df_metrics_michael,loudness= (loudness+60)/60)
df_metrics_prince = mutate(df_metrics_prince,loudness= (loudness+60)/60)
df_metrics_michael= pivot_longer(df_metrics_michael, c(danceability, acousticness, loudness, valence, liveness, energy), names_to="metrics",values_to = "values")
df_metrics_prince= pivot_longer(df_metrics_prince, c(danceability, acousticness, loudness, valence, liveness, energy), names_to="metrics",values_to = "values")
df_metrics_michael$metrics <- as.factor(df_metrics_michael$metrics)
df_metrics_prince$metrics <- as.factor(df_metrics_prince$metrics)
ggplot(df_metrics_michael, aes(x=metrics, y=values, fill=metrics)) +
geom_boxplot() +scale_color_brewer(palette="Dark2") + labs( x="", y="Values", title="Michael Jackson Music Metrics")
ggplot(df_metrics_michael, aes(x=metrics, y=values, fill=metrics)) +
geom_boxplot() +scale_color_brewer(palette="Dark2") + labs( x="", y="Values", title="Michael Jackson Music Metrics") +
theme(axis.text.x = element_text(angle = 90))
ggplot(df_metrics_prince, aes(x=metrics, y=values, fill=metrics)) +
geom_boxplot() +scale_color_brewer(palette="Dark2") + labs( x="", y="Values", title="Prince Music Metrics") +
theme(axis.text.x = element_text(angle = 90))
ggplot( prince_df, aes(x=year, y=popularity))  +geom_line(stat = "summary")
```{r}
ggplot( michael_df, aes(x=year, y=popularity))  +geom_line(stat = "summary")
ggplot( df, aes(x=year, y=duration_ms))  +geom_line(stat = "summary")
df = ('WHO Data for PCA')
df
df.head()
head(df)
df = read.csv('WHO Data for PCA')
head(df)
df = read.csv('WHO Data for PCA.csv')
head(df)
df = read.csv('WHO Data for PCA.csv')
head(df)
setwd("C:/Users/motta/OneDrive - IE Students/IE/Data Viz/Assignment 2/Group_assigment2_DV")
df = read.csv('WHO Data for PCA.csv')
head(df)
pca <- as.data.frame((prcomp(df, scale= TRUE)$x))
glimpse(pca)
df = read.csv('WHO Data for PCA.csv')
head(df)
pca <- as.data.frame((prcomp(df, scale= TRUE)$First))
glimpse(pca)
df = read.csv('WHO Data for PCA.csv')
head(df)
pca <- as.data.frame((prcomp(df, scale= TRUE)))
glimpse(pca)
typeof(df)
typeof(df.x)
typeof(df.Under.five.mortality.rate..probability.of.dying.by.age.5.per.1000.live.births)
typeof(df.Under.five.mortality.rate..probability.of.dying.by.age.5.per.1000.live.births.)
sapply(df, typeof)
pca <- as.data.frame((prcomp(df, scale= TRUE)$x))
pca <- as.data.frame((prcomp(df, scale= TRUE)$Indicator))
df = read.csv('WHO Data for PCA.csv')
head(df)
sapply(df, typeof)
pca <- as.data.frame((prcomp(df, scale= TRUE)$x))
pca <- as.data.frame((prcomp(df, scale= TRUE)))
who.pca <- prcomp(df, scale= TRUE
glimpse(pca)
glimpse(who.pca)
library(factoextra)
install.packages(factoextra)
library(factoextra)
install.packages('factoextra')
library(factoextra)
fviz_eig(who.pca)
df = read.csv('WHO Data for PCA.csv')
who.pca <- prcomp(df, scale= TRUE)
fviz_eig(who.pca)
who.pca <- prcomp(df, scale= TRUE)
df = read.csv('WHO Data for PCA.csv')
who.pca <- prcomp(df, scale= TRUE)
df = read.csv('WHO Data for PCA.csv'
who.pca <- prcomp(df, scale= TRUE)
df = read.csv('WHO Data for PCA.csv')
head(df)
who.pca <- prcomp(df, scale= TRUE)
df = read.csv('WHO Data for PCA.csv')
who.pca <- prcomp(df, scale= TRUE)
df$Location = as.numeric(as.factor(df$Location))
head(df)
df$x = as.numeric(as.factor(df$x))
library(tidyverse)
df2 %>% remove_rownames %>% column_to_rownames(var="x")
who.pca <- prcomp(df, scale= TRUE)
df %>% remove_rownames %>% column_to_rownames(var="x")
df %>% remove_rownames %>% column_to_rownames(var="Location")
df %>% remove_rownames %>% column_to_rownames(var=x)
str(df)
df %>% remove_rownames %>% column_to_rownames(var=X)
df %>% remove_rownames %>% column_to_rownames(var='X')
who.pca <- prcomp(df, scale= TRUE)
who.pca <- prcomp(df, scale= TRUE)
who.pca <- as.data.frame(prcomp(df, scale= TRUE))
who.pca <- as.data.frame(prcomp(df, scale= TRUE)$x)
who.pca <- as.data.frame(prcomp(df, scale= TRUE)$X)
df = read.csv('WHO Data for PCA.csv')
who.pca <- as.data.frame(prcomp(df, scale= TRUE)$X)
####
# Principal Component Analysis (PCA)
####
mtcars
####
# Principal Component Analysis (PCA)
####
str(mtcars)
####
# Principal Component Analysis (PCA)
####
mtcars
str(df)
####
# Principal Component Analysis (PCA)
####
mtcars
####
# Principal Component Analysis (PCA)
####
str(mtcars)
df = read.csv('WHO Data for PCA.csv')
str(df)
pca <- as.data.frame(prcomp(mtcars, scale=TRUE)$x)
glimpse(pca)
####
# Principal Component Analysis (PCA)
####
str(mtcars)
str(df)
str(df$X)
df %>% remove_rownames %>% column_to_rownames(var='X')
str(df$X)
df %>% remove_rownames %>% column_to_rownames(var=X)
str(df$X)
df = read.csv('WHO Data for PCA.csv')
str(df$X)
df$X = as.numeric(as.factor(df$X))
df$X = as.numeric(as.factor(df$X))
str(df$X)
who.pca <- as.data.frame(prcomp(df, scale= TRUE)$X)
fviz_eig(who.pca)
who.pca <- prcomp(df, scale= TRUE)
fviz_eig(who.pca)
fviz_pca_ind(who.pca,
col.ind = "cos2", # Color by the quality of representation
gradient.cols = c("#00AFBB", "#E7B800", "#FC4E07"),
repel = TRUE     # Avoid text overlapping
)
fviz_pca_ind(who.pca,
col.ind = "cos2", # Color by the quality of representation
gradient.cols = c("#00AFBB", "#E7B800", "#FC4E07"),
repel = TRUE     # Avoid text overlapping)
fviz_pca_ind(who.pca,
col.ind = "cos2", # Color by the quality of representation
gradient.cols = c("#00AFBB", "#E7B800", "#FC4E07"),
repel = TRUE     # Avoid text overlapping)
fviz_pca_ind(who.pca,
col.ind = "cos2", # Color by the quality of representation
gradient.cols = c("#00AFBB", "#E7B800", "#FC4E07"))
write.csv(who.pca,"who_PCA.csv")
who.pca <- as.data.frame(prcomp(df, scale= TRUE))
who.pca <- as.data.frame(prcomp(df, scale= TRUE)$X)
write.csv(who.pca,"who_PCA.csv")
who.pca
df = read.csv('WHO Data for PCA.csv')
str(df$X)
#library(tidyverse)
#df %>% remove_rownames %>% column_to_rownames(var='X')
str(df$X)
df$X = as.numeric(as.factor(df$X))
who.pca <- as.data.frame(prcomp(df, scale= TRUE)$X)
#who.pca <- as.data.frame(prcomp(df, scale= TRUE))
#fviz_eig(who.pca)
write.csv(who.pca,"who_PCA.csv")
df = read.csv('WHO Data for PCA.csv')
str(df$X)
#library(tidyverse)
#df %>% remove_rownames %>% column_to_rownames(var='X')
str(df$X)
df$X = as.numeric(as.factor(df$X))
who.pca <- as.data.frame(prcomp(df, scale= TRUE)$X)
#who.pca <- as.data.frame(prcomp(df, scale= TRUE))
#fviz_eig(who.pca)
write.csv(who.pca,"who_PCA.csv")
who.pca <- as.data.frame(prcomp(df, scale= TRUE))
who.pca <- (prcomp(df, scale= TRUE))
who.pca
who.pca = as.data.frame(who.pca)
str(summary(who.pca))
class(who.pca)
data.frame(who.pca)
as.data.frame(who.pca)
summary(who.pca)
who.pca$importance
who.pca$Importance
summary(who.pca)$importance
df2 = summary(who.pca)$importance
class(df2)
write.csv(df2,"who_PCA.csv")
who.pca <- as.data.frame(prcomp(df, scale= TRUE)$X)
str(summary(who.pca))
install.packages('factoextra')
library(factoextra)
df = read.csv('WHO Data for PCA.csv')
str(df$X)
#library(tidyverse)
#df %>% remove_rownames %>% column_to_rownames(var='X')
str(df$X)
df$X = as.numeric(as.factor(df$X))
#who.pca <- as.data.frame(prcomp(df, scale= TRUE)$X)
who.pca <- (prcomp(df, scale= TRUE))
#who.pca = as.data.frame(who.pca)
#fviz_eig(who.pca)
str(summary(who.pca))
summary(who.pca)
df2 = summary(who.pca)$importance
class(df2)
write.csv(df2,"who_PCA.csv")
install.packages("factoextra")
df = read.csv('WHO Data for PCA.csv')
str(df$X)
#library(tidyverse)
#df %>% remove_rownames %>% column_to_rownames(var='X')
str(df$X)
df$X = as.numeric(as.factor(df$X))
#who.pca <- as.data.frame(prcomp(df, scale= TRUE)$X)
who.pca <- (prcomp(df, scale= TRUE))
#who.pca = as.data.frame(who.pca)
#fviz_eig(who.pca)
str(summary(who.pca))
summary(who.pca)
df2 = summary(who.pca)$importance
class(df2)
write.csv(df2,"who_PCA.csv")
df = read.csv('WHO Data for PCA.csv')
str(df$X)
df = read.csv('WHO Data for PCA.csv')
str(df$X)
df = read.csv('WHO Data for PCA.csv')
str(df$X)
str(df)
str(df$Location)
df$Location = as.numeric(as.factor(df$Location))
who.pca <- (prcomp(df, scale= TRUE))
summary(who.pca)
str(summary(who.pca))
df = read.csv('WHO Data for PCA.csv')
who.pca <- as.data.frame(prcomp(df, scale= TRUE)$x)
df$Location = as.numeric(as.factor(df$Location))
who.pca <- as.data.frame(prcomp(df, scale= TRUE)$x)
who.pca
write.csv(who.pca,"who_PCA.csv")
df = read.csv('WHO Data for PCA.csv')
str(df)
who.pca <- (prcomp(df, scale= TRUE))
who.pca <- as.data.frame(prcomp(df, scale= TRUE)$x)
.
write.csv(who.pca,"who_PCA.csv")
summary(who.pca)
df = read.csv('WHO Data for PCA.csv')
who.pca <- as.data.frame(prcomp(df, scale= TRUE)$x)
glimpse(who.pca)
library(deplyr)
df = read.csv('WHO Data for PCA.csv')
str(df$Location)
df2 <- df %>%
unite("Location", c(Location)) %>%
column_to_rownames("Location")
head(df2)
who.pca <- (prcomp(df, scale= TRUE))
str(df2$Location)
who.pca <- (prcomp(df2, scale= TRUE))
names(who.pca)
summary(who.pca)
who.pca$x[1:5.1:3]
who.pca$x
df = read.csv('WHO Data for PCA.csv')
df2 <- df %>%
unite("Location", c(Location)) %>%
column_to_rownames("Location")
head(df2)
who.pca <- (prcomp(df2, scale= TRUE, rank. = 3))
who.pca$x
summary(who.pca)
who.pca <- (prcomp(df2, scale= TRUE))
summary(who.pca)
who.pca$x
write.csv(who.pca$x,"who_PCA.csv")
